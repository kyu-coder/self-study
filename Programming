Structure and Interpretation of Computer Programs
Book:
https://mitpress.mit.edu/sites/default/files/sicp/full-text/book/book.html
Lecture:
https://archive.org/details/ucberkeley-webcast-PL3E89002AA9B9879E?sort=titleSorter


------------------------------------------------------------------------------------------------------------------------------------------------

Reviewer: brianharvey - - September 23, 2020
Subject: Lecture notes, etc.
Hi, that's me in the videos.

You can find the lecture notes, sample exams with solutions, homework solutions, and other course documents here:
https://people.eecs.berkeley.edu/~bh/61a-pages

About the software: Your best bet these days might be to use the simply-scheme package in Racket as another commenter suggests below. 
STk still works for me, but I'm only on MacOS 10.13; I know everything will break if I ever have to replace my Mac with a new one.

I'm refraining from rating my own lectures...



------------------------------------------------------------------------------------------------------------------------------------------------


Subject: Stick with it
I was directed here from TYCS over a year ago. I started watching the lectures, along with following the course materials (notes, hw, labs, midterms) 
and printed copy of SICP. At the beginning, I used Racket and simply-scheme, but once I got to streams I switched to original MIT/GNU Scheme - 
both worked fine, never had any issues on MacOS.

I have now completed all lectures and read through 4 out of 5 SICP chapters. For people who are starting the course, stick with it. 
It's worth it. The lectures are a great suplement to SICP, they help explain and highlight the concepts behind each chapter of the book. 
Mr Harvey does a great job of presenting these concepts in a digestible way. Throughout the course they all add up to give you an overview of 
big ideas in computer science. And they truly are big ideas - when you implement your own object oriented dialect or a metacircular interpreter, 
you feel like you possessed some obscure ancient knowledge.

In short, great course. Take your time and enjoy the journey.

Some useful links:
https://www.gnu.org/software/mit-scheme/
http://community.schemewiki.org/?SICP-Solutions
https://crash.net.nz/posts/2014/08/configuring-vim-for-sicp/


------------------------------------------------------------------------------------------------------------------------------------------------



"We recommend working through at least the first three chapters of SICP and doing the exercises."



"SICP is unique in its ability—at least potentially—to alter your fundamental beliefs about computers and programming. 
Not everybody will experience this. Some will hate the book, others won't get past the first few pages. 
But the potential reward makes it worth trying."



If you don't enjoy SICP, try Composing Programs. If that still doesn't suit, try How to Design Programs. 
HTDP: http://htdp.org/








If none of these seem to be rewarding your effort, perhaps that's a sign that you should focus on other topics for some time, 
and revisit the discipline of programming in another year or two.
